@use "sass:math";
@use 'sass:color';

@import 'colors.scss';

html {
  font-size: 16px;
}
@media screen and (min-width: 320px) {
  html {
    font-size: calc(16px + 6 * ((100vw - 320px) / 680));
  }
}
@media screen and (min-width: 774px) {
  html {
    font-size: 20px;
  }
}


#ana {
  position:fixed;
  top: -2px;
  left: -2px;
  z-index:-10;
  width:2px;
  height:2px;
  overflow: hidden;
}

body,
html {
  margin: 0;
  padding: 0;
  background-color: $bg-color;

  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

#fullWrap {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;

  display: flex;

  @media (orientation: portrait) {
    flex-direction: column-reverse;

  }

  @media (orientation: landscape) {
    flex-direction: row;
  }

}


#main {
  flex: 1 1 auto;
  background-color: $bg-color;
  display: flex;
  align-items: center;
  justify-content: center;

  #container {
    position: relative;
    display: block;

    background-image: url("./../images/frame2.svg");
    background-position: center;
    background-size: contain;
    background-repeat: no-repeat;

    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1;


    #photosphere {
      position: absolute;
    }

  }

}


$BARGAP: 0.4rem;

#bar {
  flex: 0 0 auto;
  background-color: $bg-color;
  position: relative;

  box-sizing: border-box;

  #innerBar {
    box-sizing: border-box;
    background-color: $bg-color;
    position: absolute;
    top: 0;
    left: 0;
    gap: $BARGAP * 2;
    display: flex;
    align-items: center;
    justify-content: center;
    direction: ltr;
    * {
      box-sizing: border-box;
    }
  }
}

.groupContainer {

  background-color: $light-blue;
  display: flex;

  .groupInnerContainer {

    background-color: $bg-color;
    display: flex;
    gap: $BARGAP;
    align-items: center;

  }
}


/* ======== SCROLLBAR =========*/

#bar {

  @supports selector(::-webkit-scrollbar) {
    
    &::-webkit-scrollbar {
      width: auto;
      height: auto;
    }

    &::-webkit-scrollbar:vertical {
      width: 0.4rem;
      height: auto;
    }

    &::-webkit-scrollbar:horizontal {
      height: 0.4rem;
      width: auto;
    }

    &::-webkit-scrollbar-track {
      background: $sb-track-color;
      border-radius: 0.2rem;
    }

    &::-webkit-scrollbar-thumb {
      background-color: $sb-thumb-color;
      border-radius: 0.2rem;
      &:hover {
        background-color: $sb-thumb-hover-color;
      }
      &:active {
        background-color: $sb-thumb-focus-color;
      }
    }
  }

  @supports not selector(::-webkit-scrollbar) {
    scrollbar-width: thin;
    scrollbar-color: $sb-thumb-color $sb-track-color;
  }

}



$ttS: 1.4rem;
$ttF: 1rem;
$mar: 0.4rem;
$sS: 0.85rem;

.topTitle, .sTitle {

  font-family: Antonio, 'Arial Narrow', Arial, Helvetica, sans-serif;
  font-weight: 600;
  font-style: normal;
  text-transform: uppercase;
  white-space: nowrap;

}

.topTitle {

  position: relative;
  font-size: $ttF;

  display: flex;

  &>div {
    line-height: 0.8;
    color: $bg-color;
    & > span {
      font-size: 0.8em;
      font-weight: 400;
    }
  }

}

.sTitle {


  position: relative;
  background-color: $dark-blue;

  font-size: $sS;
  display: flex;


  &>div {

    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;

    color: $title-grey;
    background-color: $bg-color;
    line-height: 0.8;


  }
}


@mixin psc($width) {
  #container {
    width: $width;
    height: 3 * $width * 0.25;

    #photosphere {
      left: $width * 0.05;
      right: $width * 0.05;
      top: $width * 0.05;
      bottom: $width * 0.05;
      border-radius: math.div($width,150);
      overflow: hidden;
    }
    #alertButton {
      font-size:  math.div($width,50);
    }
  }
}





@media (orientation: landscape) {
  @include psc(75vw);
  @import "./land";



  #bar {
    margin: 5vh 0 5vh 1.5vh;
    width: 19vw;
    overflow-y: scroll;
    direction: rtl;

    #innerBar {
      left: 0.5vw;
      right: 0;
      top: 0;
      flex-direction: column;
    }
  }


  .groupContainer {
    
    padding-left:$BARGAP;
    border-top-left-radius: $BARGAP;
    flex-direction: column;
    width:100%;

    .groupInnerContainer {

      padding-left:$BARGAP;
      padding-top:$BARGAP;
      border-top-left-radius: $BARGAP;
      flex-direction: column;
      width:100%;

    }
  }

  .topTitle {

    width: 100%;
    height: $ttS;  

    align-items: center;
    justify-content: flex-start;
    padding-left: $BARGAP * 0.5;
    & > div {
      & > span {
        margin-left: 0.3em;
      }
    }
  }
  
  .sTitle {

    width: 100%;
    height: $sS;  

    align-items: center;
    justify-content: flex-start;
    padding-left: $BARGAP;

    & > div {
      height: 120%;
      & > div {
        padding: 0 ($BARGAP * 0.5);
      }  
    }
  }

  .mapBox {
    margin: $BARGAP 0;
  }

}

@media (min-aspect-ratio: 8/5) {
  @include psc(120vh);
}

@media (orientation: portrait) {

  @import "./port";

  @include psc(90vw);
  $innerBarHeight: 22.5vh;

  #bar {
    margin: 0 5vw 2.5vh 5vw;
    height: 24.5vh;
    overflow-x: scroll;

    #innerBar {
      top: 0;
      height: $innerBarHeight;
      flex-direction: row;
    }
  }

  
  .groupContainer {

    padding-bottom:$BARGAP;
    border-bottom-left-radius: $BARGAP;
    flex-direction: row;
    height: 100%;

    .groupInnerContainer {

      padding-left:$BARGAP;
      padding-bottom: $BARGAP;
      border-bottom-left-radius: $BARGAP;
      flex-direction: row;
      height: 100%;

    }
  }


  .topTitle {
    height: 100%;
    width: $ttS;

    align-items: flex-end;
    justify-content: center;
    padding-bottom: $BARGAP * 0.5;


    &>div {
      writing-mode: vertical-lr;
      transform: rotate(180deg);
      -webkit-transform: rotate(180deg);
      -moz-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
      -o-transform: rotate(180deg);

      & > span {
        margin-top: 0.3em;
      }
    }
  }

  .sTitle {
    height:100%;
    width: $sS;

    align-items: flex-end;
    justify-content: center;
    padding-bottom: $BARGAP;

    &>div {
      writing-mode: vertical-lr;
      transform: rotate(180deg);
      -webkit-transform: rotate(180deg);
      -moz-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
      -o-transform: rotate(180deg);

      width:120%;
      margin: 0 -1px;

      & > div {
        padding: ($BARGAP * 0.5) 0;
      }
  
    }
  }

  
  .mapBox {
    margin: 0 $BARGAP;
  }



  /*
  .mapBox {
    margin-left: 1.5vw;
    margin-right: 1.5vw;
    width: auto;
  }
  */


}

.mapBox {
  font-size: 0.5rem;
}
$camera-point-orig: #b49ac4;
$camera-point: #EBCEFF;
$camera-point-hover: #FEEFFF;

.mapBox .cameraPoint {
  fill: $camera-point;
  stroke: #000;
  stroke-width: 0.04em;
  stroke-opacity: 0.6;
  paint-order: stroke fill;
  fill-opacity: 0.75;
  // mix-blend-mode: hard-light;

  &:hover {
    cursor: pointer;
    fill: $camera-point-hover;
    stroke-opacity: 1;
  }
}



#alertButton {
  font-size: 1rem;
  position: absolute;
  background-color: $alert-red;
  color: $bg-color;
  //width: 7%;
  height: 3.35%;
  padding: 0 1.5em;
  bottom: 0;
  right: 7.5%;
  font-family: Antonio, 'Arial Narrow', Arial, Helvetica, sans-serif;
  font-weight: 700;
  // display: flex;
  // align-items: center;
  // justify-content: center;
  //padding-right: 0.3em;
  box-sizing: border-box;

  &:hover {
    cursor: pointer;
    background-color: $alert-red-hover;
  }

  display: block;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.2s;

  &.visible {
    pointer-events: all;
    opacity: 1;
    display: block;
  }


}

#ghlink {
  position: absolute;
  right:1vmin;
  top:1vmin;
  height:2vmin;
  width:2vmin;
  background-image: url("./../images/GitHub-Mark-64px.png");
  background-size: contain;
  display: block;
  &:hover {
    background-image: url("./../images/GitHub-Mark-Light-64px.png");
  }
}


#innerBar.ready svg.mapBox .cameraPoint {
  animation-name: flashy;
  animation-duration: 0.2s;
  animation-delay: 0s;
  animation-iteration-count: 7;
  animation-fill-mode: none;
  
}

@keyframes flashy {
  0%   {opacity: 1;}
  25%  {opacity: 0.5;}
  50%  {opacity: 0.5;}
  75%  {opacity: 1;}
  100% {opacity: 1;}
}